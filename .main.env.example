# Indicate which environment will the application be running in
#
# Options:
# dev — development/testing environment. Persistence will be done in MONGO_DEV_DB_NAME.
# prod — production environment. Persistence will be done in MONGO_PROD_DB_NAME.
NODE_ENV=dev

DOMAIN_PROD=https://aqueous-caverns-91110.herokuapp.com
DOMAIN_DEV=http://localhost:3000

# Stripe API test key (replace with real development key later)
# https://dashboard.stripe.com
STRIPE_SECRET_API_KEY_PROD=starts_with_live
STRIPE_SECRET_API_KEY_DEV=starts_with_test

# Stripe webhook secret

# In TESTING/DEVELOPMENT: Run `stripe listen --forward-to localhost:3000/stripe/webhook` https://stripe.com/docs/webhooks/test
STRIPE_WEBHOOK_SECRET_DEV=starts_with_whsec

# In PRODUCTION: Dashboard https://stripe.com/docs/webhooks/go-live
STRIPE_WEBHOOK_SECRET_PROD=starts_with_whsec

# API path that listens to Stripe webhooks (locly.com/api/<STRIPE_WEBHOOK_PATH>)
STRIPE_WEBHOOK_PATH=stripe/webhook

# Production DB name in MongoDB
MONGO_PROD_DB_NAME=prod

# Test DB name in MongoDB
MONGO_DEV_DB_NAME=dev

# MongoDB connection string (mongodb+srv://<USERNAME>:<PASSWORD>@cluster<X>.tcrn6.mongodb.net/...)
MONGO_CONNECTION_STRING=CHANGE_THIS_TO_ACTUAL_MONGO_CONNECTION_STRING

# The name of authentication status indicator cookie
# Possible values: true — authorized, false — not authorized
AUTH_INDICATOR_COOKIE_NAME=auth

# The name of the token cookie (cookies:"token='AAD-3RGRG...'; ...")
TOKEN_COOKIE_NAME=token

# The key with which the token is signed
TOKEN_SIGNING_KEY=CHANGE_THIS_TO_STRONG_KEY

# Expiration period of the token used for email verification
# Format of https://github.com/vercel/ms: "3 days", "6y", "1h", "150ms"
VERIFICATION_TOKEN_EXPIRES_IN=30m

# Expiration period of session token (stored in cookie) for request authentication/authorization
# Format of https://github.com/vercel/ms: "3 days", "6y", "1h", "150ms"
AUTH_TOKEN_EXPIRES_IN=7d

# Service to use to send emails
#
# Options:
# `sendgrid`          -- send an actual email through SendGrid
# `ethereal_pseudo`   -- send a pseudo email through Ethereal Mail. The email doesn't get actually sent, 
#                       but all email properties and content are visible in https://ethereal.email/messages
EMAIL_SERVICE=ethereal_pseudo

# To view emails during development/testing, go to https://ethereal.email/messages and log in with below credentials.
ETHEREAL_EMAIL=test@ethereal.email
ETHEREAL_PASSWORD=CHANGE_THIS_TO_ACTUAL_ETHEREAL_PASSWORD

# Sendgrid API key for sending out emails
SENDGRID_API_KEY=CHANGE_THIS_TO_ACTUALY_SENDGRID_API_KEY

# The email address to send verification emails from
VERIFICATION_SENDER_EMAIL=test@example.com